import java.io.*;
import java.util.*;
import java.lang.*;
import java.math.*;
import java.text.*;
import java.security.*;
import java.util.regex.*;
import java.util.concurrent.*;
class Solution {
	static void merge(int[] arr, int low, int mid, int high) {
		int i = 0, j = 0, k = low;
		int[] L = new int[mid - low];
		int[] R = new int[high - (mid + 1)];
		for(i = 0; i <
	}
	static void sort(int[] arr, int low, int high) {
		if(low >= high) return;
		int mid = low + ((low + high) / 2);
		sort(arr, low, mid);
		sort(arr, mid + 1, high);
		merge(arr, low, mid, high);
	}
	static int getmajor(int[] arr) {
	}
	public static void main(String[] args) throws IOException {
		Solution sol = new Solution();
		DataInputStream in = new DataInputStream(System.in);
		int n = Integer.parseInt(in.readLine());
		int[] arr = new int[n];
		for(int i = 0; i < n; i++)
			arr[i] = Integer.parseInt(in.readLine());
		System.out.println(sol.getmajor(arr));
	}
}
